/*1. DDL Operation (CREATE INDEX)
Write a SQL statement to create an index on the salary column in the 'employees' table.*/
create index salary_idx on employees(salary);

/*2. DML Operation (INSERT with SELECT)
Write a SQL statement to insert into a new table 'high_salary_employees' all employees who have a salary greater than $10000.*/
create table high_salary_employees(
h_first_name varchar(10),
h_salary number);
insert into high_salary_employees(h_first_name, h_salary) 
select first_name, salary from employees where salary>10000;

/*3. SELECT Statement with ORDER BY clause
Write a SQL statement to select all employees' first and last names and their salaries, sorted by salary in descending order.*/
select first_name, last_name, salary from employees
order by salary desc;

/*4. Single Function (Date)
Write a SQL statement to calculate the number of years between the hire date and current date for all employees.*/
select first_name, extract(year from sysdate)-extract(year from hire_date) as 'work_years' from employees;
SELECT
    employee_id,
    hire_date,
    TRUNC(MONTHS_BETWEEN(SYSDATE, hire_date) / 12) AS years_of_service
FROM
    employees;
??????????????????????????????????????????????????????????????????????????????????????????????????????????????????

/*5. Aggregate Function with GROUP BY
Write a SQL statement to find the total salary paid for each department.*/
select sum(salary), department_id from employees
group by department_id;
